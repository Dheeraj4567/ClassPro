# ClassPro Monorepo Docker Compose Configuration
# This file defines both frontend and backend services for the ClassPro application

services:
  # Frontend Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile.frontend
    environment:
      NODE_ENV: production
    ports:
      - "243:243"
    depends_on:
      - backend
    volumes:
      - ./.env:/app/.env:ro
    networks:
      - classpro-network

  # Backend Go Application
  backend:
    build:
      context: ./backend
      dockerfile: ../Dockerfile.backend
    environment:
      GO_ENV: production
    ports:
      - "8080:8080"
    volumes:
      - ./.env:/app/.env:ro
    networks:
      - classpro-network

networks:
  classpro-network:
    driver: bridge
# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

