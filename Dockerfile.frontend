# syntax=docker/dockerfile:1

ARG NODE_VERSION=22.11.0

################################################################################
FROM node:${NODE_VERSION}-alpine AS base

# Install Bun
RUN npm install -g bun@1.1.38

WORKDIR /app

################################################################################
FROM base as deps

# Copy frontend package files
COPY frontend/package.json frontend/bun.lock* ./

# Install dependencies
RUN bun install --frozen-lockfile --production

################################################################################
FROM base as build

# Copy frontend package files
COPY frontend/package.json frontend/bun.lock* ./

# Install all dependencies including dev
RUN bun install --frozen-lockfile

# Copy frontend source
COPY frontend/ .

# Copy environment file
COPY .env .env

# Build the application
RUN bun run build

################################################################################
FROM base as final

ENV NODE_ENV=production
USER node

# Copy package.json and dependencies
COPY frontend/package.json ./
COPY --from=deps /app/node_modules ./node_modules

# Copy built application
COPY --from=build /app/.next ./.next
COPY --from=build /app/public ./public

EXPOSE 243

CMD ["bun", "start", "--port", "243"] 